{#

Macro for creating an inventory item.
Top half is hardcoded output.
outputFields is used for looped output of an array of fields. This is dynamically done, but a function needs to be set up for every field type.


- prefix - prepended to every attr
- itemsData - pass the items.json here so we have a reference in-macro



#}


{% macro create(prefix='inventory', itemsData="") %}


<div class="sheet-item-card sheet-type-{{prefix}}">
    <div class="sheet-item-main">
        {# Image, Head, Type #}
        <div class="sheet-main-top">
            {% for itemType in itemsData.itemTypes %}
                <input class="sheet-hidden sheet-item-type-{{itemType.value}}" type="checkbox" name="attr_{{prefix}}_{{itemsData.type.attr_name}}" value="{{itemType.value}}" {{"checked" if itemsData.fields.type.default == itemType.value }}/>
            {% endfor %}
            <div class="sheet-image"></div>
            <div class="sheet-content">
                <div class="sheet-name">
                    <input class="sheet-line-input" type="text" name="attr_{{prefix}}_{{itemsData.fields.name.attr_name}}" value="Item"></input>
                </div>
                <div class="sheet-type">
                    {# Item Type #}
                    <select class="sheet-select-borderless" name="attr_{{prefix}}_{{itemsData.fields.type.attr_name}}">
                        {% for option in itemsData.itemTypes %}
                            <option value="{{option.value}}">{{option.name}}</option>
                        {% endfor %}
                    </select>

                    {% for itemType in itemsData.itemTypes %}
                        <input class="sheet-hidden sheet-item-type-{{itemType.value}}" type="checkbox" name="attr_{{prefix}}_{{itemsData.fields.type.attr_name}}" value="{{itemType.value}}" {{"checked" if itemsData.fields.type.default == itemType.value }}/>
                    {% endfor %}
                    
                    {# Melee SubType #}
                    <div class="sheet-subtype sheet-subtype-melee">
                        Type: 
                        <select class="sheet-select-borderless" name="attr_{{prefix}}_{{itemsData.subtypes.melee}}">
                            {% for option in itemsData.meleeTypes %}
                                <option value="{{option.value}}">{{option.name}}</option>
                            {% endfor %}
                        </select>
                    </div>

                    {# Ranged SubType #}
                    <div class="sheet-subtype sheet-subtype-ranged">
                        Type: 
                        <select class="sheet-select-borderless" name="attr_{{prefix}}_{{itemsData.subtypes.ranged}}">
                            {% for option in itemsData.rangedTypes %}
                                <option value="{{option.value}}">{{option.name}}</option>
                            {% endfor %}
                        </select>
                    </div>

                    {# armor SubType #}
                    <div class="sheet-subtype sheet-subtype-armor">
                        Type: 
                        <select class="sheet-select-borderless" name="attr_{{prefix}}_{{itemsData.subtypes.armor}}">
                            {% for option in itemsData.armorTypes %}
                                <option value="{{option.value}}">{{option.name}}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="sheet-main-bottom">
            <div class="sheet-description">
                <div class="sheet-label">Description</div>
                <textarea name="attr_{{prefix}}_{{itemsData.fields.description.attr_name}}" value="Item Description">Item Description</textarea/>
            </div>
        </div>

        {# Stats #}
        <div class="sheet-main-bottom">
            {% for itemType in itemsData.itemTypes %}
                <input class="sheet-hidden sheet-item-type-{{itemType.value}}" type="checkbox" name="attr_{{prefix}}_{{itemsData.fields.type.attr_name}}" value="{{itemType.value}}" {{"checked" if itemsData.fields.type.default == itemType.value }}/>
            {% endfor %}
            <div class="sheet-melee-fields">
                <div class="sheet-melee-fields-container">
                    {% for fld in itemsData.fields.melee %}
                        {{ outputField(field=fld, prefix=prefix, itemsData=itemsData)}}
                    {% endfor %}
                </div>
            </div>

            <div class="sheet-ranged-fields">
                <div class="sheet-ranged-fields-container">
                    {% for fld in itemsData.fields.ranged %}
                        {{ outputField(field=fld, prefix=prefix, itemsData=itemsData)}}
                    {% endfor %}
                </div>
            </div>

            <div class="sheet-armor-fields">
                <div class="sheet-armor-fields-container">
                    {% for fld in itemsData.fields.equipment %}
                    <div class="sheet-armor-fields-block">
                        {{ outputField(field=fld, prefix=prefix, itemsData=itemsData)}}
                    </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>


    <div class="sheet-item-side">
        <div class="sheet-item-side-container">

            <div class="sheet-quantity sheet-amount-counter">
                <div class="sheet-label">
                    Quantity
                </div>
                <input class="sheet-borderless-input" type="text" name="attr_{{prefix}}_{{itemsData.fields.quantity.attr_name}}" value="1"></input>
            </div>

            <div class="sheet-weight sheet-amount-counter">
                <div class="sheet-label">
                    Weight
                </div>
                <input class="sheet-borderless-input" type="text" name="attr_{{prefix}}_{{itemsData.fields.quantity.attr_name}}" value="1"></input>
            </div>


            <input class="sheet-hidden sheet-item-type-{{itemsData.itemTypes[0].value}}" type="checkbox" name="attr_{{prefix}}_{{itemsData.fields.type.attr_name}}" value="{{itemsData.itemTypes[0].value}}" checked/>
            <div class="sheet-equip">
                <button type="action" class="sheet-equip-button" name="act_equipItem" >Equip</button>
            </div>
        </div>
    </div>
</div>

{% endmacro %}


{%- macro getAttrName(field='', prefix='') -%}
    {% if prefix %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    {{- attrName | join -}}
{%- endmacro -%}



{% macro outputField(field='', prefix='', itemsData='') %}

    {% set class = "" %}
    <div class="sheet-hidden">

        {# looped fields aren't supposed to output a field without a num #}
        {% if field.looped %}
            {% for num in range(0,field.count) %}
            <input type="hidden" name="{{ attrName | join}}_{{num}}" />

            {% if field.has_mod %}
            <input type="hidden" name="{{ attrName | join}}_{{num}}_mod" />
            {% endif %}

            {% endfor %}
        
        {% else %}
            <input type="hidden" name="{{ attrName | join}}" />

            {% if field.type == "max" %}
                <input type="hidden" name="{{ attrName | join}}_max" />
            {% endif %}
        {% endif %}
    </div>

{% endmacro %}

{% macro outputField(field='', prefix='', itemsData='') %}
    {% switch field.type %}
        {% case "text" %}
            {{ createText(field=field, prefix=prefix, itemsData=itemsData) }}
        {% case "number" %}
            {{ createText(field=field, prefix=prefix, itemsData=itemsData) }}
        {% case "max" %}
            {{ createMax(field=field, prefix=prefix, itemsData=itemsData) }}
        {% case "select" %}
            {{ createSelect(field=field, prefix=prefix, itemsData=itemsData) }}
        {% case "select_stat_repeater" %}
            {{ createSelectStatRepeater(field=field, prefix=prefix, itemsData=itemsData) }}
    {% endswitch %}
{% endmacro %}


{# Text/Number #}
{% macro createText(field='', prefix='', itemsData='') %}
    {% if prefix %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    <div class="sheet-item-field sheet-line-field">
        <div class="sheet-header">
            {{ field.display_name }}
        </div>
        <div class="sheet-field">
            <input class="sheet-line-input" type="text" name="{{attrName | join}}"></input>
        </div>
    </div>
{% endmacro %}


{# max #}
{% macro createMax(field='', prefix='', itemsData='') %}
    {% if prefix %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    <div class="sheet-item-field sheet-max-field">
        <div class="sheet-header">
            {{ field.display_name }}
        </div>
        <div class="sheet-field">
            <input class="sheet-line-input sheet-number" type="text" name="{{attrName | join}}"></input>
            <div class="sheet-divider">/</div>
            <input class="sheet-line-input sheet-number" type="text" name="{{attrName | join}}_max"></input>
        </div>
    </div>
{% endmacro %}


{# select #}
{% macro createSelect(field='', prefix='', itemsData='') %}
    {% if prefix %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    {% switch field.options %}
        {% case "itemTypes" %}
            {% set selectOptions = itemsData.itemTypes %}
        {% case "ammoTypes" %}
            {% set selectOptions = itemsData.ammoTypes %}
        {% case "meleeTypes" %}
            {% set selectOptions = itemsData.meleeTypes %}
        {% default %}
            {% set selectOptions = [] %}
    {% endswitch %}


    <div class="sheet-item-field sheet-select-field">
        <div class="sheet-header">
            {{ field.display_name }}
        </div>
        <div class="sheet-field">
            <select class="sheet-line-select" name="{{attrName | join}}" value="{{field.default}}">
                {% for option in selectOptions %}
                <option value="{{option.value}}">{{option.name}}</option>
                {% endfor %}
            </select>
        </div>
    </div>
{% endmacro %}

{# select and stat repeater #}
{% macro createSelectStatRepeater(field='', prefix='', itemsData='') %}
    {% if prefix %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    {% switch field.options %}
        {% case "itemTypes" %}
            {% set selectOptions = itemsData.itemTypes %}
        {% case "ammoTypes" %}
            {% set selectOptions = itemsData.ammoTypes %}
        {% default %}
            {% set selectOptions = [] %}
    {% endswitch %}


    <div class="sheet-item-field sheet-stat-repeater-field">
        <div class="sheet-header">
            {{ field.display_name }}
        </div>
        <div class="sheet-field">
            {% for num in range(0,field.count) %}
                {% set toJoin = ["attr_", prefix, "_", field.attr_name, "_", num] %}
                {% set newAttr = toJoin | join %}

                <div class="sheet-stat-item">
                    <div class="sheet-stat-select">
                        <select name="{{newAttr}}">
                            <option value="" default></option>
                            {# a custom made array of options #}
                            {% for val in options %}
                                <option value="{{val.value}}">{{val.name}}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="sheet-stat-mod">
                        {% set modJoin = [newAttr, "_mod"] %}
                        <input class="sheet-line-input sheet-number" type="text" name="{{ modJoin | join}}"></input>
                    </div>
                </div>

            {% endfor %}
        </div>
    </div>
{% endmacro %}



