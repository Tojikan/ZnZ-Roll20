{# Output a field - header and the input element
    - field param - Pass in individual field. Required.
    - header - field label tag
    - class - optional class to append to the field
    - options - options to pass into a select field. 
    - prefix - attr prefix

    Fields get fed into outputField which routes to field creators which create the field based on the field type.
    This should be used for a generic field output that doesn't require special edge cases like modifiers, bonuses, or repeaters
#}

{# field router #}
{% macro outputField(field='', header="h2", class="", options="", prefix="", displayHeader=true) %}
    {% switch field.field_type %}
        {% case "text" %}
            {{ createText(field=field, header=header, class=class, prefix=prefix, displayHeader=displayHeader ) }}
        {% case "textarea" %}
            {{ createTextarea(field=field, header=header, class=class, prefix=prefix, displayHeader=displayHeader ) }}
        {% case "number" %}
            {{ createNumber(field=field, header=header, class=class, prefix=prefix, displayHeader=displayHeader ) }}
        {% case "select" %}
            {{ createSelect(field=field, header=header, class=class, options=options, prefix=prefix, displayHeader=displayHeader ) }}
        {% default %}
            <p> ERROR! UNHANDLED FIELD TYPE! </p>
    {% endswitch %}

{% endmacro %}


{#### field creators ####}

{# text #}
{% macro createText(field="", header="h2", class="", prefix="", displayHeader=true) %}
    {% if field.attr_prefixed %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    <div class="sheet-znz-field sheet-znz-field-text {{field.field_class}} {{class if class}}">
        {% if displayHeader %} <div class="sheet-znz-field-label"><{{ header }}>{{ field.display_name }}</{{header}}></div>{% endif %}
        <div class="sheet-znz-field-input"><input type="text" name="{{ attrName | join}}" {{ "readonly" if field.readonly }} ></input></div>
    </div>
{% endmacro %}

{# textarea #}
{% macro createTextarea(field="", header="h2", class="", prefix="", displayHeader=true) %}
    {% if field.attr_prefixed %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    <div class="sheet-znz-field sheet-znz-field-textarea {{field.field_class}} {{ class }}">
        {% if displayHeader %} <div class="sheet-znz-field-label"><{{ header }}>{{ field.display_name }}</{{header}}></div>{% endif %}
        <div class="sheet-znz-field-input"><textarea name="{{ attrName | join}}"></textarea></div>
    </div>
{% endmacro %}

{# number #}
{% macro createNumber(field="", header="h2", class="", prefix="", displayHeader=true) %}
    {% if field.attr_prefixed %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}

    <div class="sheet-znz-field sheet-znz-field-number {{field.field_class}} {{class}}">
        {% if displayHeader %} <div class="sheet-znz-field-label"><{{ header }}>{{ field.display_name }}</{{header}}></div>{% endif %}

        <div class="sheet-znz-field-input">
            {% if field.has_max  %}
                <div class="sheet-znz-flex">
                    <div class="sheet-znz-number">
                        <input type="number" name="{{ attrName | join}}"  {{ "readonly" if field.readonly }} min="{{field.field_min}}" max="{{field.field_max}}" value="{{field.default_value}}"></input>
                    </div>
                    <div class="sheet-divider">/</div>
                    <div class="sheet-znz-number-max">
                        <input type="number" name="{{ attrName | join}}_max"  {{ "readonly" if field.readonly }} value="{{field.default_value}}"></input>
                    </div>  
                </div>
            {% else %}
                <input type="number" name="{{ attrName | join}}" {{ "readonly" if field.readonly }} min="{{field.field_min}}" max="{{field.field_max}}" ></input>
            {% endif %}
        </div>

    </div>
{% endmacro %}

{# select #}
{% macro createSelect(field="", header="h2", class="", options="", prefix="", displayHeader=true) %}
    {% if field.attr_prefixed %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}
    
    <div class="sheet-znz-field sheet-znz-field-select {{field.field_class}} {{class}}">
        {% if displayHeader %} <div class="sheet-znz-field-label"><{{ header }}>{{ field.display_name }}</{{header}}></div>{% endif %}
        <div class="sheet-znz-field-input">
            <select name="{{ attrName | join}}" value="{{field.field_selected}}">
                {% if field.field_options_type == "array" %}
                {% for option in field.field_options %}
                <option value="{{option.value}}" {{"default" if option.name == field.field_selected}}>{{option.name}}</option>
                {% endfor %}

                {# not created inside the field definition #}
                {% elif field.field_options_type == "external" %}
                {% for option in options %}
                <option value="{{option.value}}" {{"default" if option.default}}>{{option.name}}</option>
                {% endfor %}

                {% endif %}
            </select>
        </div>
    </div>
{% endmacro %}

{# hidden #}
{% macro createHidden(field="", prefix="") %}
    {% if field.attr_prefixed %}
        {% set attrName = ["attr_", prefix, "_", field.attr_name] %}
    {% else %}
        {% set attrName = ["attr_", field.attr_name] %}
    {% endif %}
    
    <div class="sheet-znz-field-hidden">

    {# we do this it like this because looped fields aren't supposed to output a field without a num #}
    {% if field.has_max %}
        <input type="hidden" name="{{ attrName | join}}" />
        <input type="hidden" name="{{ attrName | join}}_max" />
    {% elif field.mod_attr %}
        <input type="hidden" name="{{ attrName | join}}" />
        <input type="hidden" name="{{ attrName | join}}_{{mod_attr}}" />
    {% elif field.mod_check %}
        <input type="hidden" name="{{ attrName | join}}" />
        <input type="hidden" name="{{ attrName | join}}_{{mod_check}}" />
    {% elif field.bonus_attr %}
        <input type="hidden" name="{{ attrName | join}}" />
        <input type="hidden" name="{{ attrName | join}}_{{bonus_attr}}" />
    {% elif field.bonus_check %}
        <input type="hidden" name="{{ attrName | join}}" />
        <input type="hidden" name="{{ attrName | join}}_{{bonus_check}}" />
    {% elif field.looped %}
        {% for num in range(0,field.count) %}
        <input type="hidden" name="{{ attrName | join}}_{{num}}" />

        {% if field.repeat_mod_attr %}
        <input type="hidden" name="{{ attrName | join}}_{{num}}_{{field.repeat_mod_attr}}" />
        {% endif %}

        {% endfor %}
    {% else %}
        <input type="hidden" name="{{ attrName | join}}" />
    {% endif %}

    </div>

{% endmacro %}
